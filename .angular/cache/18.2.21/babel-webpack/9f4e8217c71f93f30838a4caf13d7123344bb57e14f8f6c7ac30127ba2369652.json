{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/cuentas/cuentas.service\";\nimport * as i3 from \"@angular/common\";\nfunction CuentasComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 11);\n    i0.ɵɵtext(2, \"El n\\u00FAmero es obligatorio y debe tener m\\u00EDnimo 5 caracteres.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CuentasComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 11);\n    i0.ɵɵtext(2, \"El tipo es obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CuentasComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 11);\n    i0.ɵɵtext(2, \"El saldo inicial debe ser mayor o igual a 0.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CuentasComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 11);\n    i0.ɵɵtext(2, \"Debes asignar un Cliente ID.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CuentasComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵlistener(\"click\", function CuentasComponent_li_23_Template_li_click_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.seleccionarCuenta(c_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", c_r2.id === (ctx_r2.cuentaSeleccionada == null ? null : ctx_r2.cuentaSeleccionada.id));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", c_r2.numero, \" - \", c_r2.tipo, \" - Cliente: \", c_r2.cliente == null ? null : c_r2.cliente.nombre, \" \");\n  }\n}\nexport let CuentasComponent = /*#__PURE__*/(() => {\n  class CuentasComponent {\n    constructor(fb, svc) {\n      this.fb = fb;\n      this.svc = svc;\n      this.cuentas = [];\n      this.cuentaSeleccionada = null;\n      this.form = this.fb.group({\n        numero: ['', [Validators.required, Validators.minLength(5)]],\n        tipo: ['', Validators.required],\n        saldoInicial: [0, [Validators.required, Validators.min(0)]],\n        clienteId: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.load();\n    }\n    load() {\n      this.svc.listar().subscribe(r => this.cuentas = r);\n    }\n    seleccionarCuenta(c) {\n      this.cuentaSeleccionada = c;\n      this.form.patchValue({\n        numero: c.numero,\n        tipo: c.tipo,\n        saldoInicial: c.saldoInicial,\n        clienteId: c.clienteId\n      });\n      console.log('Cuenta seleccionada ID:', c.id);\n    }\n    crear() {\n      if (this.form.invalid) return;\n      this.svc.crear(this.form.value).subscribe({\n        next: () => {\n          alert('Cuenta creada con éxito');\n          this.form.reset();\n          this.load();\n        },\n        error: err => {\n          console.error(err);\n          alert('Error al guardar la cuenta: ' + (err.error?.message || JSON.stringify(err.error)));\n        }\n      });\n    }\n    actualizar() {\n      if (this.cuentaSeleccionada) {\n        if (this.form.invalid) return;\n        this.svc.actualizar(this.cuentaSeleccionada.id, this.form.value).subscribe({\n          next: () => {\n            alert('Cuenta actualizada con éxito');\n            this.form.reset();\n            this.load();\n          },\n          error: err => {\n            console.error(err);\n            alert('Error al actualizar la cuenta: ' + (err.error?.message || JSON.stringify(err.error)));\n          }\n        });\n      }\n    }\n    eliminar() {\n      if (this.cuentaSeleccionada) {\n        if (this.form.invalid) return;\n        this.svc.eliminar(this.cuentaSeleccionada.id).subscribe({\n          next: () => {\n            alert('Cuenta eliminada con éxito');\n            this.form.reset();\n            this.load();\n          },\n          error: err => {\n            console.error(err);\n            alert('Error al eliminar la cuenta: ' + (err.error?.message || JSON.stringify(err.error)));\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function CuentasComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CuentasComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CuentasService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CuentasComponent,\n        selectors: [[\"app-cuentas\"]],\n        decls: 24,\n        vars: 9,\n        consts: [[1, \"cuentas\", \"container\"], [3, \"formGroup\"], [\"formControlName\", \"numero\", \"placeholder\", \"N\\u00FAmero\"], [4, \"ngIf\"], [\"formControlName\", \"tipo\", \"placeholder\", \"Tipo\"], [\"type\", \"number\", \"formControlName\", \"saldoInicial\", \"placeholder\", \"Saldo Inicial\"], [\"formControlName\", \"clienteId\", \"placeholder\", \"Cliente ID\"], [1, \"contenedor\"], [1, \"hijo\"], [\"type\", \"button\", 3, \"click\", \"disabled\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"red\"], [3, \"click\"]],\n        template: function CuentasComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Cuentas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵelement(4, \"input\", 2);\n            i0.ɵɵtemplate(5, CuentasComponent_div_5_Template, 3, 0, \"div\", 3);\n            i0.ɵɵelement(6, \"input\", 4);\n            i0.ɵɵtemplate(7, CuentasComponent_div_7_Template, 3, 0, \"div\", 3);\n            i0.ɵɵelement(8, \"input\", 5);\n            i0.ɵɵtemplate(9, CuentasComponent_div_9_Template, 3, 0, \"div\", 3);\n            i0.ɵɵelement(10, \"input\", 6);\n            i0.ɵɵtemplate(11, CuentasComponent_div_11_Template, 3, 0, \"div\", 3);\n            i0.ɵɵelementStart(12, \"diV\", 7)(13, \"div\", 8)(14, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CuentasComponent_Template_button_click_14_listener() {\n              return ctx.crear();\n            });\n            i0.ɵɵtext(15, \"Crear\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(16, \" \\u00A0 \");\n            i0.ɵɵelementStart(17, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CuentasComponent_Template_button_click_17_listener() {\n              return ctx.actualizar();\n            });\n            i0.ɵɵtext(18, \"Actualizar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(19, \" \\u00A0 \");\n            i0.ɵɵelementStart(20, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CuentasComponent_Template_button_click_20_listener() {\n              return ctx.eliminar();\n            });\n            i0.ɵɵtext(21, \"Eliminar\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(22, \"ul\");\n            i0.ɵɵtemplate(23, CuentasComponent_li_23_Template, 2, 5, \"li\", 10);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"numero\"].invalid && ctx.form.controls[\"numero\"].touched);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"tipo\"].invalid && ctx.form.controls[\"tipo\"].touched);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"saldoInicial\"].invalid && ctx.form.controls[\"saldoInicial\"].touched);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"clienteId\"].invalid && ctx.form.controls[\"clienteId\"].touched);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.cuentas);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".contenedor[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:30px;border:0px}.hijo[_ngcontent-%COMP%]{padding:20px}\"]\n      });\n    }\n  }\n  return CuentasComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}